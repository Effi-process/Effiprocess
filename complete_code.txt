<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Effiprocess</title>
  <link rel="stylesheet" href="styles.css" />
  <script defer src="app.js"></script>
</head>
<body>
  <!-- Loading Screen -->
  <div class="loading-screen" id="loadingScreen">
    <div class="loading-content">
      <div class="loading-logo">
        <!-- Logo wird durch Animation ersetzt -->
      </div>
      <div class="loading-progress">
        <div class="progress-label">LOADING</div>
        <div class="progress-bar">
          <div class="progress-fill" id="progressFill"></div>
        </div>
        <div class="progress-number" id="progressNumber">0</div>
        <div class="quality-text">QUALITY IS OUR STANDARD</div>
      </div>
    </div>
  </div>

  <!-- Canvas für Bubble Animation -->
  <canvas id="dotAnimation" class="dot-canvas"></canvas>

  <!-- Vertikale Pfeile für Slides -->
  <div class="nav-vertical" id="navVertical">
    <button class="arrow up" data-action="prev" aria-label="Vorheriger Bereich">▲</button>
    <button class="arrow down" data-action="next" aria-label="Nächster Bereich">▼</button>
  </div>

  <!-- Fixed Header -->
  <header class="header">
    <div class="header-logo-container" id="headerLogoContainer" onclick="goToHome()">
      <!-- Logo will be loaded here -->
    </div>
  </header>

  <!-- Vollbild-Slides -->
  <main id="slides">
    <!-- SLIDE 0: HERO -->
    <section class="slide hero" data-slide="0">
      <div class="hero-text-container">
        <h2 class="hero-main-text">
          <span style="font-family: 'Helvetica Neue', sans-serif; font-weight: 300;">Modern websites</span><br/>
          <span style="font-family: 'Georgia', serif; font-weight: 400;">interfaces</span><br/>
          <span style="font-family: 'SF Mono', Monaco, monospace; font-weight: 400;">artificial intelligence</span><br/>
          <span style="font-family: 'Times New Roman', serif; font-weight: 300;">for your</span><br/>
          <span style="color: #a078c8; font-family: 'Arial', sans-serif; font-weight: 500;">efficient processes</span>
        </h2>
      </div>
    </section>

    <!-- SLIDE 1: SERVICES -->
    <section class="slide services" data-slide="1">
      <div class="services-container">
        <!-- Services Page -->
        <div class="services-page" id="services-page-0" style="opacity: 1;">
          <div class="services-content-grid">
            
            <!-- Left side: Text content -->
            <div class="services-text-section">
              <div class="services-category">OUR EXPERTISE</div>
              <h3 class="services-headline">Modern websites that drive<br/>your business forward.</h3>
              <p class="services-description">
                We create responsive, high-performance websites with cutting-edge technologies. 
                From concept to deployment, we ensure your digital presence stands out with 
                seamless user experiences and powerful backend solutions.
              </p>
              
              <!-- Enhanced features grid -->
              <div class="services-features-grid">
                <div class="feature-card">
                  <div class="feature-icon">
                    <div class="icon-circle">P</div>
                  </div>
                  <div class="feature-content">
                    <div class="feature-title">Performance First</div>
                    <div class="feature-desc">Lightning-fast loading times and optimized user experiences</div>
                  </div>
                </div>
                <div class="feature-card">
                  <div class="feature-icon">
                    <div class="icon-circle">R</div>
                  </div>
                  <div class="feature-content">
                    <div class="feature-title">Responsive Design</div>
                    <div class="feature-desc">Perfect display across all devices and screen sizes</div>
                  </div>
                </div>
                <div class="feature-card">
                  <div class="feature-icon">
                    <div class="icon-circle">S</div>
                  </div>
                  <div class="feature-content">
                    <div class="feature-title">SEO Optimized</div>
                    <div class="feature-desc">Built for search engines and maximum visibility</div>
                  </div>
                </div>
              </div>
              
              <!-- Technology stack -->
              <div class="tech-stack">
                <div class="tech-label">Technologies we use:</div>
                <div class="tech-tags">
                  <span class="tech-tag">React</span>
                  <span class="tech-tag">Next.js</span>
                  <span class="tech-tag">TypeScript</span>
                  <span class="tech-tag">Tailwind</span>
                  <span class="tech-tag">Node.js</span>
                </div>
              </div>
            </div>
            
            <!-- Right side: Browser illustration -->
            <div class="services-visual-section">
              <!-- Geometric background elements -->
              <div class="geometric-shape shape-1"></div>
              <div class="geometric-shape shape-2"></div>
              <div class="geometric-shape shape-3"></div>
              <div class="geometric-shape shape-4"></div>
              
              <!-- Browser illustration -->
              <div class="browser-illustration">
                <svg viewBox="0 0 400 280" class="browser-svg">
                  <!-- Browser window -->
                  <rect x="20" y="20" width="360" height="240" rx="16" fill="white" stroke="#a078c8" stroke-width="3"/>
                  
                  <!-- Browser top bar -->
                  <rect x="20" y="20" width="360" height="50" rx="16" fill="#a078c8"/>
                  <rect x="25" y="65" width="350" height="190" rx="8" fill="#f8f9fa"/>
                  
                  <!-- Traffic lights -->
                  <circle cx="45" cy="45" r="7" fill="#ff5f5f"/>
                  <circle cx="70" cy="45" r="7" fill="#ffbd2e"/>  
                  <circle cx="95" cy="45" r="7" fill="#27ca3f"/>
                  
                  <!-- Search bar -->
                  <rect x="150" y="35" width="180" height="20" rx="10" fill="white" stroke="#8a6fb8" stroke-width="1"/>
                  <circle cx="320" cy="45" r="8" fill="none" stroke="#8a6fb8" stroke-width="2"/>
                  
                  <!-- Plus button -->
                  <text x="355" y="52" font-size="18" fill="white" text-anchor="middle">+</text>
                  
                  <!-- Content area -->
                  <rect x="45" y="85" width="200" height="8" rx="4" fill="#a078c8"/>
                  <rect x="45" y="105" width="160" height="8" rx="4" fill="#a078c8"/>
                  <rect x="45" y="125" width="180" height="8" rx="4" fill="#c8a0d8"/>
                  
                  <!-- Sidebar -->
                  <rect x="280" y="85" width="80" height="80" rx="8" fill="#e8e0f0"/>
                  <rect x="290" y="95" width="60" height="6" rx="3" fill="#a078c8"/>
                  <rect x="290" y="110" width="45" height="6" rx="3" fill="#a078c8"/>
                  <rect x="290" y="125" width="55" height="6" rx="3" fill="#a078c8"/>
                  
                  <!-- Bottom elements -->
                  <rect x="45" y="180" width="120" height="50" rx="8" fill="#f0e8ff"/>
                  <rect x="180" y="180" width="120" height="50" rx="8" fill="#f0e8ff"/>
                </svg>
              </div>
              
              <!-- Page number -->
              <div class="page-number">01/06</div>
            </div>
            
          </div>
        </div>
        
      </div>
    </section>

    <!-- SLIDE 2: INTERFACE -->
    <section class="slide" data-slide="2" style="background: #ffffff !important; z-index: 999 !important;">
      <!-- Background visual with Large Interface Icon on the left -->
      <div style="position: absolute; top: 0; left: 180px; width: 40%; height: 100%; display: flex; align-items: center; justify-content: center; background: linear-gradient(to right, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.9) 100%), linear-gradient(135deg, #f8f9fa 0%, #f0f0f0 25%, #e8e8e8 50%, #f0f0f0 75%, #f8f9fa 100%); z-index: 1;">
        <!-- Extra Large Interface Icon -->
        <div style="opacity: 0.12; filter: drop-shadow(0 20px 60px rgba(160, 120, 200, 0.2)); transform: scale(1.1);">
          <svg viewBox="0 0 400 300" style="width: 380px; height: 285px;">
            <!-- Browser Window -->
            <rect x="30" y="30" width="340" height="240" rx="20" fill="white" stroke="#a078c8" stroke-width="4"/>
            
            <!-- Browser Top Bar -->
            <rect x="30" y="30" width="340" height="50" rx="20" fill="#a078c8"/>
            <rect x="35" y="75" width="330" height="190" rx="12" fill="#f8f9fa"/>
            
            <!-- Traffic Lights -->
            <circle cx="340" cy="55" r="5" fill="white" opacity="0.7"/>
            <circle cx="320" cy="55" r="5" fill="white" opacity="0.7"/>
            <circle cx="300" cy="55" r="5" fill="white" opacity="0.7"/>
            
            <!-- Search Bars -->
            <rect x="55" y="100" width="280" height="18" rx="9" fill="white" stroke="#a078c8" stroke-width="2"/>
            <rect x="55" y="130" width="280" height="18" rx="9" fill="white" stroke="#a078c8" stroke-width="2"/>
            
            <!-- Search Icon -->
            <circle cx="75" cy="139" r="5" fill="none" stroke="#a078c8" stroke-width="2"/>
            
            <!-- UI Elements -->
            <rect x="55" y="170" width="32" height="18" rx="3" fill="#a078c8"/>
            <rect x="95" y="170" width="32" height="18" rx="3" fill="#a078c8"/>
            <rect x="135" y="170" width="32" height="18" rx="3" fill="#a078c8"/>
            <rect x="175" y="170" width="32" height="18" rx="3" fill="#a078c8"/>
            
            <!-- Plus icon -->
            <line x1="107" y1="179" x2="117" y2="179" stroke="white" stroke-width="1.5"/>
            <line x1="112" y1="174" x2="112" y2="184" stroke="white" stroke-width="1.5"/>
            
            <!-- Menu lines -->
            <line x1="145" y1="176" x2="157" y2="176" stroke="white" stroke-width="1"/>
            <line x1="145" y1="179" x2="157" y2="179" stroke="white" stroke-width="1"/>
            <line x1="145" y1="182" x2="157" y2="182" stroke="white" stroke-width="1"/>
            
            <!-- Grid dots -->
            <circle cx="185" cy="176" r="1" fill="white"/>
            <circle cx="191" cy="176" r="1" fill="white"/>
            <circle cx="197" cy="176" r="1" fill="white"/>
            <circle cx="185" cy="179" r="1" fill="white"/>
            <circle cx="191" cy="179" r="1" fill="white"/>
            <circle cx="197" cy="179" r="1" fill="white"/>
            <circle cx="185" cy="182" r="1" fill="white"/>
            <circle cx="191" cy="182" r="1" fill="white"/>
            <circle cx="197" cy="182" r="1" fill="white"/>
            
            <!-- Content blocks -->
            <rect x="55" y="210" width="110" height="25" rx="5" fill="#e8e0f0" opacity="0.5"/>
            <rect x="175" y="210" width="110" height="25" rx="5" fill="#e8e0f0" opacity="0.5"/>
          </svg>
        </div>
      </div>
      
      <!-- Main content area on the right -->
      <div style="position: absolute; right: 0; top: 0; width: 45%; height: 100%; display: flex; flex-direction: column; justify-content: center; padding: 0 100px 0 40px; z-index: 1000;">
        <div style="max-width: 520px;">
          <div style="font-size: 0.9rem; color: #9a9a9a; letter-spacing: 0.1em; text-transform: uppercase; font-weight: 500; margin-bottom: 30px;">Modern Interfaces</div>
          <h2 style="font-size: 3.2rem; font-weight: 300; color: #333333; line-height: 1.15; margin-bottom: 40px; letter-spacing: -0.02em;">
            At its heart, interface isn't<br/>
            about structures.<br/>
            It's about people.
          </h2>
          
          <div style="font-size: 1rem; color: #666666; line-height: 1.65; margin-bottom: 50px; max-width: 460px;">
            <p>
              We strive to go above and beyond for our clients, fostering a relationship built on 
              trust, confidence and honesty. Maybe it's our family orientation, but we think the 
              most satisfying part of what we do is that we get to work with so many wonderful 
              people. We're proud that we're a 100% women-owned business certified by the 
              Women's Business Development Center (WBDC). We're also proud that we put 
              people first, with monthly reward programs and team-building activities throughout 
              the year.
            </p>
          </div>
          
          <div style="margin-top: 20px;">
            <div style="font-size: 0.8rem; color: #9a9a9a; letter-spacing: 0.15em; text-transform: uppercase; font-weight: 500; cursor: pointer; position: relative;">
              DISCOVER MORE ABOUT OUR PERSONAL COMMITMENT
            </div>
          </div>
        </div>
      </div>
      
      <!-- Left side: Large number -->
      <div style="position: absolute; left: 0; top: 0; width: 180px; height: 100%; display: flex; align-items: center; justify-content: center; z-index: 1000;">
        <div style="font-size: 5rem; font-weight: 300; color: #a078c8; transform: rotate(-90deg); white-space: nowrap; font-family: 'SF Mono', Monaco, monospace;">02/06</div>
      </div>
    </section>

    <!-- SLIDE 3: AI AGENT SYSTEM -->
    <section class="slide" data-slide="3" style="background: #ffffff !important; z-index: 999 !important;">      
      <!-- Main content area on the left -->
      <div style="position: absolute; left: 0; top: 120px; width: 65%; height: calc(100% - 180px); display: flex; flex-direction: column; justify-content: flex-start; padding: 0 60px 0 80px; z-index: 1000;">
        <div style="max-width: 680px;">
          <div style="font-size: 0.9rem; color: #9a9a9a; letter-spacing: 0.1em; text-transform: uppercase; font-weight: 500; margin-bottom: 30px;">AI Agent Systems</div>
          <h2 style="font-size: 3.2rem; font-weight: 300; color: #333333; line-height: 1.15; margin-bottom: 40px; letter-spacing: -0.02em;">
            Intelligent automation<br/>
            that thinks and acts<br/>
            like your best employee.
          </h2>
          
          <div style="font-size: 1rem; color: #666666; line-height: 1.65; margin-bottom: 40px; max-width: 650px;">
            <p style="margin-bottom: 20px;">
              Our AI agents don't just follow scripts—they understand context, make decisions, 
              and adapt to your business needs. From customer service to data analysis, 
              they work 24/7 to streamline your operations while maintaining the human touch 
              your customers expect.
            </p>
            <p style="margin-bottom: 20px;">
              Unlike traditional automation tools, our intelligent agents learn from every interaction, 
              continuously improving their performance and decision-making capabilities. They can handle 
              complex workflows, manage customer inquiries, process documents, and integrate seamlessly 
              with your existing systems.
            </p>
            <p>
              Smart automation that grows with your business, scales with your needs, and delivers 
              measurable results from day one. Experience the future of business efficiency with 
              AI agents that truly understand your industry and objectives.
            </p>
          </div>
          
          <!-- Key Features Section -->
          <div style="margin-bottom: 35px;">
            <h4 style="font-size: 1.1rem; font-weight: 600; color: #333; margin-bottom: 20px; letter-spacing: -0.01em;">Key Capabilities</h4>
            <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px; max-width: 650px;">
              <div style="padding: 12px 0; border-bottom: 1px solid rgba(160, 120, 200, 0.1);">
                <div style="font-size: 0.9rem; font-weight: 600; color: #333; margin-bottom: 4px;">Natural Language Processing</div>
                <div style="font-size: 0.8rem; color: #666;">Advanced communication capabilities</div>
              </div>
              <div style="padding: 12px 0; border-bottom: 1px solid rgba(160, 120, 200, 0.1);">
                <div style="font-size: 0.9rem; font-weight: 600; color: #333; margin-bottom: 4px;">Machine Learning</div>
                <div style="font-size: 0.8rem; color: #666;">Continuous improvement algorithms</div>
              </div>
              <div style="padding: 12px 0; border-bottom: 1px solid rgba(160, 120, 200, 0.1);">
                <div style="font-size: 0.9rem; font-weight: 600; color: #333; margin-bottom: 4px;">Data Analytics</div>
                <div style="font-size: 0.8rem; color: #666;">Real-time insights and reporting</div>
              </div>
              <div style="padding: 12px 0; border-bottom: 1px solid rgba(160, 120, 200, 0.1);">
                <div style="font-size: 0.9rem; font-weight: 600; color: #333; margin-bottom: 4px;">24/7 Availability</div>
                <div style="font-size: 0.8rem; color: #666;">Round-the-clock automation</div>
              </div>
              <div style="padding: 12px 0; border-bottom: 1px solid rgba(160, 120, 200, 0.1);">
                <div style="font-size: 0.9rem; font-weight: 600; color: #333; margin-bottom: 4px;">System Integration</div>
                <div style="font-size: 0.8rem; color: #666;">Seamless workflow connection</div>
              </div>
              <div style="padding: 12px 0; border-bottom: 1px solid rgba(160, 120, 200, 0.1);">
                <div style="font-size: 0.9rem; font-weight: 600; color: #333; margin-bottom: 4px;">Scalable Solutions</div>
                <div style="font-size: 0.8rem; color: #666;">Grows with your business needs</div>
              </div>
            </div>
          </div>
          
          <div style="margin-top: 20px; margin-bottom: 40px;">
            <div style="font-size: 0.8rem; color: #9a9a9a; letter-spacing: 0.15em; text-transform: uppercase; font-weight: 500; cursor: pointer; position: relative;">
              DISCOVER OUR AI AGENT SOLUTIONS
            </div>
          </div>
          
        </div>
      </div>
      
      <!-- Bottom gray bar across full width with counter inside -->
      <div style="position: absolute; bottom: 0; left: 0; width: 100%; height: 60px; background: linear-gradient(135deg, #f0f0f0 0%, #e8e8e8 50%, #f0f0f0 100%); z-index: 10; display: flex; align-items: center; justify-content: flex-end; padding-right: 40px;">
        <div style="font-size: 2rem; font-weight: 300; color: #a078c8; font-family: 'SF Mono', Monaco, monospace;">03/06</div>
      </div>
      
      <!-- Small Document/JSON Icon moved further right and down -->
      <div style="position: absolute; left: 75%; top: 280px; transform: translateX(-50%); z-index: 1;" id="aiIconContainer">
        <div style="opacity: 0.15; filter: drop-shadow(0 10px 20px rgba(160, 120, 200, 0.2));">
          <svg viewBox="0 0 300 400" style="width: 180px; height: 240px;">
            <!-- Document background -->
            <g fill="none" stroke="#a078c8" stroke-width="6" stroke-linecap="round" stroke-linejoin="round">
              <!-- Main document rectangle -->
              <rect x="50" y="40" width="200" height="320" rx="12" fill="white" stroke="#a078c8"/>
              
              <!-- Document corner fold -->
              <path d="M210 40 L210 80 L250 80" fill="none" stroke="#a078c8" stroke-width="4"/>
              <path d="M210 40 L250 40 L250 80" fill="none" stroke="#a078c8" stroke-width="2" opacity="0.5"/>
              
              <!-- JSON content lines -->
              <!-- Opening brace -->
              <text x="70" y="100" font-size="24" fill="#a078c8" font-family="SF Mono">{</text>
              
              <!-- Key-value pairs -->
              <text x="85" y="130" font-size="14" fill="#a078c8" font-family="SF Mono">"name": "AI Agent",</text>
              <text x="85" y="155" font-size="14" fill="#a078c8" font-family="SF Mono">"type": "automation",</text>
              <text x="85" y="180" font-size="14" fill="#a078c8" font-family="SF Mono">"features": [</text>
              <text x="105" y="205" font-size="14" fill="#a078c8" font-family="SF Mono">"intelligent",</text>
              <text x="105" y="230" font-size="14" fill="#a078c8" font-family="SF Mono">"adaptive",</text>
              <text x="105" y="255" font-size="14" fill="#a078c8" font-family="SF Mono">"contextual"</text>
              <text x="85" y="280" font-size="14" fill="#a078c8" font-family="SF Mono">],</text>
              <text x="85" y="305" font-size="14" fill="#a078c8" font-family="SF Mono">"status": "active"</text>
              
              <!-- Closing brace -->
              <text x="70" y="335" font-size="24" fill="#a078c8" font-family="SF Mono">}</text>
              
              <!-- Document border details -->
              <rect x="60" y="70" width="180" height="4" rx="2" fill="#a078c8" opacity="0.3"/>
              <rect x="60" y="350" width="180" height="4" rx="2" fill="#a078c8" opacity="0.3"/>
              
              <!-- Side indicators -->
              <circle cx="30" cy="120" r="4" fill="#a078c8" opacity="0.4"/>
              <circle cx="30" cy="160" r="4" fill="#a078c8" opacity="0.4"/>
              <circle cx="30" cy="200" r="4" fill="#a078c8" opacity="0.4"/>
              <circle cx="30" cy="240" r="4" fill="#a078c8" opacity="0.4"/>
              <circle cx="30" cy="280" r="4" fill="#a078c8" opacity="0.4"/>
            </g>
          </svg>
        </div>
      </div>
    </section>

    <!-- SLIDE 4: PROBLEMS VS SOLUTIONS -->
    <section class="slide" data-slide="4" style="background: #ffffff !important; z-index: 999 !important; overflow: hidden; right: 0 !important;">
      
      <!-- Problems Side (Left) - Pure Black -->
      <div style="position: absolute; left: 0; top: 0; width: 60vw; height: 100%; background: #000000; display: flex; flex-direction: column; justify-content: center; padding: 80px 60px 80px 120px; z-index: 1000;">
        <div style="max-width: 500px; margin-left: auto; margin-right: 40px; text-align: right;">
          <div style="font-size: 0.9rem; color: #cccccc; letter-spacing: 0.2em; text-transform: uppercase; font-weight: 600; margin-bottom: 30px;">Customer Concerns</div>
          <h2 style="font-size: 3rem; font-weight: 300; color: #ffffff; line-height: 1.2; margin-bottom: 40px; letter-spacing: -0.02em; white-space: nowrap;">
            What holds you back from AI?
          </h2>
          
          <div style="display: grid; grid-template-rows: repeat(5, 1fr); gap: 0; height: 300px;">
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 500; color: #ffffff; margin-bottom: 8px;">GDPR Compliance</div>
              <div style="font-size: 0.8rem; color: #cccccc; margin-bottom: 8px;">Data protection</div>
              <div style="width: 40%; height: 1px; background: rgba(255, 255, 255, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 500; color: #ffffff; margin-bottom: 8px;">IT Security</div>
              <div style="font-size: 0.8rem; color: #cccccc; margin-bottom: 8px;">Access rights</div>
              <div style="width: 40%; height: 1px; background: rgba(255, 255, 255, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 500; color: #ffffff; margin-bottom: 8px;">AI Hallucinations</div>
              <div style="font-size: 0.8rem; color: #cccccc; margin-bottom: 8px;">Unreliable responses</div>
              <div style="width: 40%; height: 1px; background: rgba(255, 255, 255, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 500; color: #ffffff; margin-bottom: 8px;">System Integration</div>
              <div style="font-size: 0.8rem; color: #cccccc; margin-bottom: 8px;">Compatibility</div>
              <div style="width: 40%; height: 1px; background: rgba(255, 255, 255, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 500; color: #ffffff; margin-bottom: 8px;">Cost Control</div>
              <div style="font-size: 0.8rem; color: #cccccc; margin-bottom: 8px;">Unpredictable costs</div>
              <div style="width: 40%; height: 1px; background: rgba(255, 255, 255, 0.1); margin: 0 auto;"></div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Solutions Side (Right) - Pure White -->
      <div style="position: absolute; left: 60vw; top: 0; width: 40vw; height: 100%; background: #ffffff; display: flex; flex-direction: column; justify-content: center; padding: 80px 120px 80px 60px; z-index: 1000;">
        <div style="max-width: 500px; margin-right: auto;">
          <div style="font-size: 0.9rem; color: #a078c8; letter-spacing: 0.2em; text-transform: uppercase; font-weight: 600; margin-bottom: 30px;">Our Solutions</div>
          <h2 style="font-size: 3rem; font-weight: 300; color: #333333; line-height: 1.2; margin-bottom: 40px; letter-spacing: -0.02em; white-space: nowrap;">
            We solve every concern.
          </h2>
          
          <div style="display: grid; grid-template-rows: repeat(5, 1fr); gap: 0; height: 300px;">
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 600; color: #a078c8; margin-bottom: 8px;">EU Hosting & Compliance</div>
              <div style="font-size: 0.8rem; color: #666; margin-bottom: 8px;">DSAR process, deletion concept, DPA</div>
              <div style="width: 40%; height: 1px; background: rgba(160, 120, 200, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 600; color: #a078c8; margin-bottom: 8px;">Enterprise Security</div>
              <div style="font-size: 0.8rem; color: #666; margin-bottom: 8px;">RLS/RBAC, secrets management, audits</div>
              <div style="width: 40%; height: 1px; background: rgba(160, 120, 200, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 600; color: #a078c8; margin-bottom: 8px;">Reliability Engineering</div>
              <div style="font-size: 0.8rem; color: #666; margin-bottom: 8px;">RAG, human review, disclaimers</div>
              <div style="width: 40%; height: 1px; background: rgba(160, 120, 200, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 600; color: #a078c8; margin-bottom: 8px;">Seamless Integration</div>
              <div style="font-size: 0.8rem; color: #666; margin-bottom: 8px;">Stable APIs, webhooks, E2E tests</div>
              <div style="width: 40%; height: 1px; background: rgba(160, 120, 200, 0.1); margin: 0 auto;"></div>
            </div>
            <div style="padding: 10px 0; display: flex; flex-direction: column; justify-content: center; position: relative;">
              <div style="font-size: 1rem; font-weight: 600; color: #a078c8; margin-bottom: 8px;">Transparent Pricing</div>
              <div style="font-size: 0.8rem; color: #666; margin-bottom: 8px;">Budgets, rate limits, caching</div>
              <div style="width: 40%; height: 1px; background: rgba(160, 120, 200, 0.1); margin: 0 auto;"></div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Vertical Divider with Arrow -->
      <div style="position: fixed; left: 60vw; top: 50vh; transform: translate(-50%, -50%); width: 1px; height: 80%; background: linear-gradient(to bottom, transparent 0%, rgba(160, 120, 200, 0.3) 50%, transparent 100%); z-index: 1001;"></div>
      
      <!-- Arrow pointing from problems to solutions -->
      <div style="position: fixed; left: 60vw; top: 20vh; transform: translate(-50%, -50%); z-index: 1002;">
        <div style="width: 60px; height: 60px; background: #a078c8; border-radius: 50%; display: flex; align-items: center; justify-content: center; box-shadow: 0 4px 20px rgba(160, 120, 200, 0.3);">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2">
            <path d="m9 18 6-6-6-6"/>
          </svg>
        </div>
      </div>
      
      <!-- Page Number -->
      <div style="position: absolute; bottom: 40px; left: 60vw; transform: translateX(-50%); z-index: 1003;">
        <div style="font-size: 2rem; font-weight: 300; color: #a078c8; font-family: 'SF Mono', Monaco, monospace; opacity: 0.7;">04/06</div>
      </div>
      
    </section>

    <!-- SLIDE 5: SOLUTIONS -->
    <section class="slide solutions" data-slide="5" style="background: #ffffff !important; z-index: 999 !important;">
      <!-- Left side: Vertical effiprocess text -->
      <div style="position: absolute; left: 0; top: 0; width: 180px; height: 100%; display: flex; align-items: center; justify-content: center; z-index: 1000;">
        <div style="font-size: 5rem; font-weight: 300; color: #666; transform: rotate(-90deg); white-space: nowrap; font-family: 'SF Mono', Monaco, monospace; letter-spacing: 0.02em;">effiprocess</div>
      </div>
      
      <!-- Bottom center: Smaller number -->
      <div style="position: absolute; bottom: 40px; left: 50%; transform: translateX(-50%); z-index: 1000;">
        <div style="font-size: 2.5rem; font-weight: 300; color: #a078c8; font-family: 'SF Mono', Monaco, monospace;">05/06</div>
      </div>
      
      <!-- Multiple Icons Row at Top -->
      <div style="position: absolute; top: 80px; left: 0; right: 0; height: 200px; display: flex; align-items: center; justify-content: space-evenly; padding: 0 60px; z-index: 1;">
        
        <!-- Icon 1: Website -->
        <div style="opacity: 0.15; filter: drop-shadow(0 10px 30px rgba(160, 120, 200, 0.3));">
          <svg viewBox="0 0 160 120" style="width: 180px; height: 135px;">
            <g fill="none" stroke="#a078c8" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
              <rect x="10" y="10" width="140" height="90" rx="8"/>
              <rect x="10" y="10" width="140" height="25" rx="8"/>
              <rect x="15" y="90" width="130" height="5" rx="2" fill="#a078c8"/>
              <circle cx="25" cy="22" r="3" fill="#a078c8"/>
              <circle cx="35" cy="22" r="3" fill="#a078c8"/>
              <circle cx="45" cy="22" r="3" fill="#a078c8"/>
              <rect x="20" y="50" width="60" height="4" rx="2" fill="#a078c8"/>
              <rect x="20" y="60" width="40" height="4" rx="2" fill="#a078c8"/>
              <rect x="90" y="45" width="50" height="25" rx="4" fill="#a078c8" opacity="0.3"/>
            </g>
          </svg>
        </div>
        
        <!-- Icon 2: AI Brain (Realistic) -->
        <div style="opacity: 0.15; filter: drop-shadow(0 10px 30px rgba(160, 120, 200, 0.3));">
          <svg viewBox="0 0 160 120" style="width: 150px; height: 125px;">
            <g fill="none" stroke="#a078c8" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
              <!-- Left hemisphere with realistic curves -->
              <path d="M20 60 C15 45, 18 30, 25 22 C32 15, 42 12, 52 16 C58 12, 65 14, 70 20 C75 28, 78 38, 75 50 C78 62, 75 72, 70 80 C65 86, 58 88, 52 84 C42 88, 32 85, 25 78 C18 70, 15 75, 20 60"/>
              
              <!-- Right hemisphere with realistic curves -->
              <path d="M140 60 C145 45, 142 30, 135 22 C128 15, 118 12, 108 16 C102 12, 95 14, 90 20 C85 28, 82 38, 85 50 C82 62, 85 72, 90 80 C95 86, 102 88, 108 84 C118 88, 128 85, 135 78 C142 70, 145 75, 140 60"/>
              
              <!-- Brain folds and wrinkles (left side) -->
              <path d="M25 35 C35 32, 45 35, 55 40 C50 45, 40 48, 30 45"/>
              <path d="M22 50 C32 48, 42 50, 52 55 C47 60, 37 58, 27 55"/>
              <path d="M25 65 C35 68, 45 65, 55 60 C50 55, 40 52, 30 55"/>
              
              <!-- Brain folds and wrinkles (right side) -->
              <path d="M135 35 C125 32, 115 35, 105 40 C110 45, 120 48, 130 45"/>
              <path d="M138 50 C128 48, 118 50, 108 55 C113 60, 123 58, 133 55"/>
              <path d="M135 65 C125 68, 115 65, 105 60 C110 55, 120 52, 130 55"/>
              
              <!-- Central division -->
              <path d="M80 18 C80 30, 80 42, 80 60 C80 72, 80 84, 80 92"/>
              
              <!-- Frontal lobe details -->
              <path d="M45 25 C50 22, 55 25, 60 30"/>
              <path d="M100 30 C105 25, 110 22, 115 25"/>
              
              <!-- Temporal lobe curves -->
              <path d="M35 75 C40 78, 45 82, 50 85"/>
              <path d="M125 75 C120 78, 115 82, 110 85"/>
              
              <!-- Occipital lobe -->
              <path d="M75 85 C78 88, 82 88, 85 85"/>
            </g>
          </svg>
        </div>
        
        <!-- Icon 3: Interface/Mobile -->
        <div style="opacity: 0.15; filter: drop-shadow(0 10px 30px rgba(160, 120, 200, 0.3));">
          <svg viewBox="0 0 80 120" style="width: 100px; height: 150px;">
            <g fill="none" stroke="#a078c8" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
              <rect x="10" y="10" width="60" height="100" rx="12"/>
              <rect x="15" y="20" width="50" height="70" rx="4" fill="#a078c8" opacity="0.1"/>
              <circle cx="40" cy="100" r="4" fill="#a078c8"/>
              <rect x="25" y="25" width="30" height="3" rx="1" fill="#a078c8"/>
              <rect x="25" y="35" width="20" height="3" rx="1" fill="#a078c8"/>
              <rect x="25" y="45" width="25" height="3" rx="1" fill="#a078c8"/>
              <rect x="25" y="65" width="15" height="10" rx="2" fill="#a078c8" opacity="0.3"/>
              <rect x="45" y="65" width="15" height="10" rx="2" fill="#a078c8" opacity="0.3"/>
            </g>
          </svg>
        </div>
        
        <!-- Icon 4: Gear/Solutions -->
        <div style="opacity: 0.15; filter: drop-shadow(0 10px 30px rgba(160, 120, 200, 0.3));">
          <svg viewBox="0 0 120 120" style="width: 150px; height: 150px;">
            <g fill="none" stroke="#a078c8" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="60" cy="60" r="30"/>
              <circle cx="60" cy="60" r="10" fill="#a078c8"/>
              <!-- Gear teeth -->
              <path d="M60 20 L65 30 L55 30 Z"/>
              <path d="M100 60 L90 65 L90 55 Z"/>
              <path d="M60 100 L55 90 L65 90 Z"/>
              <path d="M20 60 L30 55 L30 65 Z"/>
              <path d="M85 35 L80 45 L75 40 Z"/>
              <path d="M85 85 L75 80 L80 75 Z"/>
              <path d="M35 85 L45 75 L40 80 Z"/>
              <path d="M35 35 L40 40 L45 45 Z"/>
            </g>
          </svg>
        </div>
        
      </div>
      
      <!-- Text content moved to bottom -->
      <div style="position: absolute; bottom: 120px; left: 40px; right: 40px; z-index: 1000;">
        <div style="max-width: 800px; margin: 0 auto; text-align: center;">
          <div style="font-size: 0.9rem; color: #a078c8; letter-spacing: 0.1em; text-transform: uppercase; font-weight: 500; margin-bottom: 25px;">Solutions</div>
          <h2 style="font-size: 2.8rem; font-weight: 300; color: #333333; line-height: 1.2; margin-bottom: 30px; letter-spacing: -0.02em;">
            Comprehensive solutions tailored to your business needs.
          </h2>
          
          <div style="font-size: 1rem; color: #666666; line-height: 1.6; margin-bottom: 40px; max-width: 600px; margin-left: auto; margin-right: auto;">
            <p>
              We provide end-to-end solutions that combine cutting-edge technology 
              with strategic thinking. From initial concept to final deployment, 
              our integrated approach ensures your digital transformation drives 
              measurable results and sustainable growth.
            </p>
          </div>
          
          <div>
            <div style="font-size: 0.8rem; color: #a078c8; letter-spacing: 0.15em; text-transform: uppercase; font-weight: 500; cursor: pointer;">
              EXPLORE OUR COMPLETE SOLUTION SUITE
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- SLIDE 6: CALCULATOR -->
    <section class="slide calculator" data-slide="6" style="background: #f8f9fa !important; z-index: 999 !important;">
      <!-- Vertical 06/06 in center background -->
      <div style="position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%) rotate(-90deg); z-index: 1;">
        <div style="font-size: 3rem; font-weight: 300; color: #333; font-family: 'SF Mono', Monaco, monospace; opacity: 0.3; white-space: nowrap;">06/06</div>
      </div>
      
      <!-- Left content area moved further right -->
      <div style="position: absolute; left: 180px; top: 0; width: 35%; height: 100%; display: flex; flex-direction: column; justify-content: center; padding: 0 30px; z-index: 1000;">
        <div style="max-width: 350px;">
          <div style="font-size: 0.9rem; color: #a078c8; letter-spacing: 0.1em; text-transform: uppercase; font-weight: 500; margin-bottom: 25px;">Time Savings Calculator</div>
          <h2 style="font-size: 2.4rem; font-weight: 300; color: #333333; line-height: 1.15; margin-bottom: 25px; letter-spacing: -0.02em;">
            Calculate your<br/>
            automation ROI.
          </h2>
          
          <div style="font-size: 0.85rem; color: #666666; line-height: 1.6; margin-bottom: 30px; max-width: 380px;">
            <p style="margin-bottom: 15px;">
              Estimate time and cost savings with our intelligent automation solutions. Our advanced algorithms analyze your workflow patterns to provide accurate ROI calculations.
            </p>
            <p style="margin-bottom: 15px;">
              Transform repetitive tasks into automated processes that work 24/7. See how much time and money your business can save by implementing our tailored automation strategies.
            </p>
            <p>
              Enter your current workflow details in the calculator to discover your potential savings. Every minute automated is a minute gained for strategic business growth.
            </p>
          </div>
        </div>
      </div>

      <!-- Right side: Enhanced Calculator moved to extreme edge -->
      <div style="position: absolute; right: -100px; top: 50%; transform: translateY(-50%); width: 42%; z-index: 1000;">
        <div style="background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%); border-radius: 20px; padding: 35px; box-shadow: 0 25px 80px rgba(160, 120, 200, 0.15), 0 0 0 1px rgba(160, 120, 200, 0.1); border: 2px solid rgba(160, 120, 200, 0.2); width: 100%; max-width: 420px;">
          
          <!-- Calculator Header -->
          <div style="text-align: center; margin-bottom: 30px; padding-bottom: 20px; border-bottom: 2px solid rgba(160, 120, 200, 0.1);">
            <div style="display: inline-flex; align-items: center; gap: 10px; margin-bottom: 8px;">
              <div style="width: 12px; height: 12px; background: #a078c8; border-radius: 50%; box-shadow: 0 0 10px rgba(160, 120, 200, 0.4);"></div>
              <h3 style="color: #a078c8; font-size: 1.2rem; font-weight: 600; margin: 0;">ROI Calculator</h3>
              <div style="width: 12px; height: 12px; background: #a078c8; border-radius: 50%; box-shadow: 0 0 10px rgba(160, 120, 200, 0.4);"></div>
            </div>
            <div style="font-size: 0.75rem; color: #888; text-transform: uppercase; letter-spacing: 0.1em;">Automation Impact Analysis</div>
          </div>
          
          <!-- Clean Input Fields -->
          <div style="margin-bottom: 20px;">
            <label style="display: block; font-size: 0.8rem; color: #666; margin-bottom: 10px; font-weight: 600;">Daily Tasks</label>
            <select id="tasksPerDay" onchange="calculateSavings()" style="width: 100%; padding: 14px 16px; border: 1px solid #e0e0e0; border-radius: 8px; font-size: 0.9rem; background: white; color: #333; font-weight: 500; cursor: pointer; transition: border-color 0.2s ease;">
              <option value="5">5 tasks</option>
              <option value="10" selected>10 tasks</option>
              <option value="15">15 tasks</option>
              <option value="20">20 tasks</option>
              <option value="30">30 tasks</option>
              <option value="50">50+ tasks</option>
            </select>
          </div>
          
          <div style="margin-bottom: 20px;">
            <label style="display: block; font-size: 0.8rem; color: #666; margin-bottom: 10px; font-weight: 600;">Task Duration</label>
            <select id="minutesPerTask" onchange="calculateSavings()" style="width: 100%; padding: 14px 16px; border: 1px solid #e0e0e0; border-radius: 8px; font-size: 0.9rem; background: white; color: #333; font-weight: 500; cursor: pointer; transition: border-color 0.2s ease;">
              <option value="5">5 minutes</option>
              <option value="10">10 minutes</option>
              <option value="15" selected>15 minutes</option>
              <option value="30">30 minutes</option>
              <option value="60">1 hour</option>
              <option value="120">2+ hours</option>
            </select>
          </div>
          
          <div style="margin-bottom: 20px;">
            <label style="display: block; font-size: 0.8rem; color: #666; margin-bottom: 10px; font-weight: 600;">Work Schedule</label>
            <select id="workDays" onchange="calculateSavings()" style="width: 100%; padding: 14px 16px; border: 1px solid #e0e0e0; border-radius: 8px; font-size: 0.9rem; background: white; color: #333; font-weight: 500; cursor: pointer; transition: border-color 0.2s ease;">
              <option value="1">1 day/week</option>
              <option value="2">2 days/week</option>
              <option value="3">3 days/week</option>
              <option value="4">4 days/week</option>
              <option value="5" selected>5 days/week</option>
              <option value="6">6 days/week</option>
              <option value="7">7 days/week</option>
            </select>
          </div>
          
          <div style="margin-bottom: 20px;">
            <label style="display: block; font-size: 0.8rem; color: #666; margin-bottom: 10px; font-weight: 600;">Automation Potential</label>
            <select id="automationPercent" onchange="calculateSavings()" style="width: 100%; padding: 14px 16px; border: 1px solid #e0e0e0; border-radius: 8px; font-size: 0.9rem; background: white; color: #333; font-weight: 500; cursor: pointer; transition: border-color 0.2s ease;">
              <option value="50">50% - Partial automation</option>
              <option value="70">70% - High automation</option>
              <option value="80" selected>80% - Very high automation</option>
              <option value="90">90% - Near-complete</option>
              <option value="95">95% - Full automation</option>
            </select>
          </div>
          
          <div style="margin-bottom: 30px;">
            <label style="display: block; font-size: 0.8rem; color: #666; margin-bottom: 10px; font-weight: 600;">Team Size</label>
            <select id="employees" onchange="calculateSavings()" style="width: 100%; padding: 14px 16px; border: 1px solid #e0e0e0; border-radius: 8px; font-size: 0.9rem; background: white; color: #333; font-weight: 500; cursor: pointer; transition: border-color 0.2s ease;">
              <option value="1">1 employee</option>
              <option value="3" selected>3 employees</option>
              <option value="5">5 employees</option>
              <option value="10">10 employees</option>
              <option value="20">20 employees</option>
              <option value="50">50+ employees</option>
            </select>
          </div>
          
          <!-- Clean Results -->
          <div style="background: white; border-radius: 12px; padding: 25px; border: 1px solid #e8e8e8; box-shadow: 0 4px 20px rgba(0,0,0,0.08);">
            <div style="text-align: center; margin-bottom: 20px;">
              <div style="font-size: 0.8rem; color: #a078c8; font-weight: 600; text-transform: uppercase; letter-spacing: 0.1em;">Annual Savings</div>
            </div>
            
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; padding: 12px 0; border-bottom: 1px solid #f0f0f0;">
              <span style="font-size: 0.9rem; color: #666; font-weight: 500;">Time Saved</span>
              <span id="hoursSaved" style="font-size: 1rem; font-weight: 700; color: #a078c8;">1,560 hours</span>
            </div>
            
            <div style="display: flex; justify-content: space-between; align-items: center;">
              <span style="font-size: 0.9rem; color: #666; font-weight: 500;">Cost Savings</span>
              <span id="costSaved" style="font-size: 1.2rem; font-weight: 700; color: #a078c8;">€56,160</span>
            </div>
          </div>
        </div>
      </div>
    </section>

  </main>
</body>
</html>

=== APP.JS ===

/* =========================================================
   app.js - Effiprocess Navigation & Animation System (robust)
   ========================================================= */

const clamp = (v, a, b) => Math.max(a, Math.min(b, v));
const easeOutCubic  = t => 1 - Math.pow(1 - t, 3);
const easeInOutCubic = t => t < 0.5 ? 4*t*t*t : 1 - Math.pow(-2*t + 2, 3)/2;

/* ===== SLIDE NAVIGATION (dynamisch) ===== */
let slides = [];
let currentSlide = 0;
const idx = { hero: -1, services: -1, problems: -1 };

function refreshSlides() {
  slides = Array.from(document.querySelectorAll('.slide'));
  idx.hero     = slides.findIndex(s => s.classList.contains('hero'));
  idx.services = slides.findIndex(s => s.classList.contains('services'));
  idx.problems = slides.findIndex(s => s.classList.contains('problems'));
}

function isDarkSlide(i) {
  const el = slides[i];
  if (!el) return false;
  return el.classList.contains('problems') || el.dataset.theme === 'dark';
}

function goToSlide(index) {
  if (!slides.length) refreshSlides();
  
  // Prevent navigation beyond last slide
  if (index >= slides.length) {
    return;
  }
  
  currentSlide = clamp(index, 0, slides.length - 1);

  slides.forEach((el, i) => {
    const isActive = (i === currentSlide);
    
    // ONLY use CSS classes - let CSS handle ALL transitions
    if (isActive) {
      el.classList.add('active');
      el.style.zIndex = '100'; // Only z-index needs JS control
    } else {
      el.classList.remove('active');
      el.style.zIndex = '1';   // Only z-index needs JS control
    }
    
    // Remove any conflicting inline styles that could override CSS
    el.style.display = '';
    el.style.visibility = '';
    el.style.opacity = '';
    el.style.transform = '';
    el.style.filter = '';
    el.style.pointerEvents = '';
    el.style.transition = '';
  });
  
  // Canvas komplett verstecken auf Interface-Seite, AI Agent Seite, Probleme-Seite, Solutions-Seite und Calculator-Seite
  const canvas = document.getElementById('dotAnimation');
  if (canvas) {
    canvas.style.display = (currentSlide === 2 || currentSlide === 3 || currentSlide === 4 || currentSlide === 5 || currentSlide === 6) ? 'none' : 'block';
  }

  // Header-Farbe anhand des Slide-Typs, nicht per Index
  const header = document.querySelector('.header');
  const logo = document.querySelector('.header-logo');
  const dark = isDarkSlide(currentSlide);

  // Hide header on slide 5 (solutions page), show on all others  
  if (currentSlide === 5) { // Slide 5 only
    header.style.display = 'none';
  } else {
    header.style.display = 'block';
    header.style.backgroundColor = dark ? '#000000' : '#ffffff';
    header.style.borderBottomColor = dark ? '#333' : '#cccccc';
    if (logo) logo.style.color = dark ? '#ffffff' : '#808080';
  }

  // Hide all select dropdowns when changing slides
  const selectElements = document.querySelectorAll('select');
  selectElements.forEach(select => {
    if (select.parentElement) {
      const parentSlide = select.closest('.slide');
      if (parentSlide) {
        const slideIndex = Array.from(slides).indexOf(parentSlide);
        if (slideIndex !== currentSlide) {
          select.blur(); // Close any open dropdowns
        }
      }
    }
  });

  updateVerticalArrows();
}

function updateVerticalArrows() {
  const upBtn = document.querySelector('.nav-vertical .up');
  const downBtn = document.querySelector('.nav-vertical .down');
  if (!upBtn || !downBtn) return;

  upBtn.style.display = currentSlide === 0 ? 'none' : 'flex';
  downBtn.style.display = currentSlide === slides.length - 1 ? 'none' : 'flex';
}

function bindVerticalArrows(){
  const nav = document.getElementById('navVertical');
  if (!nav) return;

  const upBtn = nav.querySelector('.up');
  const downBtn = nav.querySelector('.down');
  if (!upBtn || !downBtn) return;

  upBtn.addEventListener('click', () => goToSlide(currentSlide - 1));
  downBtn.addEventListener('click', () => goToSlide(currentSlide + 1));

  window.addEventListener('keydown', (e) => {
    if (e.repeat) return;
    switch(e.key){
      case 'ArrowUp':
      case 'PageUp':   goToSlide(currentSlide - 1); break;
      case 'ArrowDown':
      case 'PageDown': goToSlide(currentSlide + 1); break;
      case 'Home':     goToSlide(0); break;
      case 'End':      goToSlide(slides.length - 1); break;
    }
  });

  // Robust scroll-to-slide navigation system - ONE slide per scroll gesture
  let isScrolling = false;
  let lastScrollTime = 0;
  const SCROLL_COOLDOWN = 1000; // Time between allowed navigations
  const SCROLL_DEBOUNCE = 50;   // Group rapid scroll events together
  
  window.addEventListener('wheel', (e) => {
    e.preventDefault();
    
    // Block all scrolling while in cooldown
    if (isScrolling) return;
    
    const now = Date.now();
    
    // Group rapid scroll events together (debounce)
    if (now - lastScrollTime < SCROLL_DEBOUNCE) return;
    
    // Set scrolling state immediately to prevent multiple triggers
    isScrolling = true;
    lastScrollTime = now;
    
    // Determine direction and navigate exactly like arrow keys
    if (e.deltaY > 0) {
      // Scrolling down - go to next slide
      if (currentSlide < slides.length - 1) {
        goToSlide(currentSlide + 1);
      }
    } else if (e.deltaY < 0) {
      // Scrolling up - go to previous slide  
      if (currentSlide > 0) {
        goToSlide(currentSlide - 1);
      }
    }
    
    // Reset scrolling state after cooldown
    setTimeout(() => {
      isScrolling = false;
    }, SCROLL_COOLDOWN);
  }, { passive: false });
  
  // Touch support for mobile - also ONE slide per gesture
  let touchStartY = 0;
  let touchStartTime = 0;
  let touchMoved = false;
  
  window.addEventListener('touchstart', (e) => {
    if (isScrolling) return;
    touchStartY = e.touches[0].clientY;
    touchStartTime = Date.now();
    touchMoved = false;
  }, { passive: true });
  
  window.addEventListener('touchmove', (e) => {
    e.preventDefault();
    touchMoved = true;
  }, { passive: false });
  
  window.addEventListener('touchend', (e) => {
    if (isScrolling || !touchMoved) return;
    
    const touchEndY = e.changedTouches[0].clientY;
    const deltaY = touchStartY - touchEndY;
    const touchDuration = Date.now() - touchStartTime;
    
    // Only trigger on significant swipes (distance and not too slow)
    if (Math.abs(deltaY) > 80 && touchDuration < 800) {
      isScrolling = true;
      
      if (deltaY > 0 && currentSlide < slides.length - 1) {
        // Swiping up - go to next slide
        goToSlide(currentSlide + 1);
      } else if (deltaY < 0 && currentSlide > 0) {
        // Swiping down - go to previous slide
        goToSlide(currentSlide - 1);
      }
      
      // Same cooldown as wheel scrolling
      setTimeout(() => {
        isScrolling = false;
      }, SCROLL_COOLDOWN);
    }
  }, { passive: true });
}

/* ===== SERVICES CAROUSEL ===== */
let carouselIndex = 0;
let problemsIndex = 0;
let track, problemsTrack;

function updateCarousel() {
  if (!track) return;
  const w = track.getBoundingClientRect().width;
  track.style.transform = `translateX(${-carouselIndex * w}px)`;
  updateCarouselArrows();
}

function updateCarouselArrows() {
  if (!track) return;
  const leftBtn = document.querySelector('[data-action="carousel-prev"]');
  const rightBtn = document.querySelector('[data-action="carousel-next"]');
  const maxIndex = track.children.length - 1;
  if (!leftBtn || !rightBtn) return;

  leftBtn.style.display = carouselIndex === 0 ? 'none' : 'flex';
  rightBtn.style.display = carouselIndex === maxIndex ? 'none' : 'flex';
}

function bindCarouselControls() {
  const leftBtn  = document.querySelector('[data-action="carousel-prev"]');
  const rightBtn = document.querySelector('[data-action="carousel-next"]');
  if (!track || !leftBtn || !rightBtn) return;

  leftBtn.addEventListener('click', () => {
    carouselIndex = Math.max(0, carouselIndex - 1);
    updateCarousel();
  });
  rightBtn.addEventListener('click', () => {
    const maxIndex = track.children.length - 1;
    carouselIndex = Math.min(maxIndex, carouselIndex + 1);
    updateCarousel();
  });

  window.addEventListener('keydown', (e) => {
    if (currentSlide !== idx.services) return;
    if (e.repeat) return;
    if (e.key === 'ArrowLeft')  leftBtn.click();
    if (e.key === 'ArrowRight') rightBtn.click();
  });

  // Fallback, wenn ResizeObserver fehlt
  if (typeof ResizeObserver !== 'undefined') {
    new ResizeObserver(updateCarousel).observe(track);
  } else {
    window.addEventListener('resize', updateCarousel);
  }
}

/* ===== PROBLEMS CAROUSEL ===== */
function updateProblemsCarousel() {
  if (!problemsTrack) return;
  const w = problemsTrack.getBoundingClientRect().width;
  problemsTrack.style.transform = `translateX(${-problemsIndex * w}px)`;
  updateProblemsArrows();
}

function updateProblemsArrows() {
  if (!problemsTrack) return;
  const leftBtn = document.querySelector('[data-action="problems-prev"]');
  const rightBtn = document.querySelector('[data-action="problems-next"]');
  const maxIndex = problemsTrack.children.length - 1;
  if (!leftBtn || !rightBtn) return;

  leftBtn.style.display = problemsIndex === 0 ? 'none' : 'flex';
  rightBtn.style.display = problemsIndex === maxIndex ? 'none' : 'flex';
}

function bindProblemsControls() {
  const leftBtn = document.querySelector('[data-action="problems-prev"]');
  const rightBtn = document.querySelector('[data-action="problems-next"]');
  if (!problemsTrack || !leftBtn || !rightBtn) return;

  leftBtn.addEventListener('click', () => {
    problemsIndex = Math.max(0, problemsIndex - 1);
    updateProblemsCarousel();
  });
  rightBtn.addEventListener('click', () => {
    const maxIndex = problemsTrack.children.length - 1;
    problemsIndex = Math.min(maxIndex, problemsIndex + 1);
    updateProblemsCarousel();
  });

  window.addEventListener('keydown', (e) => {
    if (currentSlide !== idx.problems) return;
    if (e.repeat) return;
    if (e.key === 'ArrowLeft') leftBtn.click();
    if (e.key === 'ArrowRight') rightBtn.click();
  });

  // Fallback, wenn ResizeObserver fehlt
  if (typeof ResizeObserver !== 'undefined') {
    new ResizeObserver(updateProblemsCarousel).observe(problemsTrack);
  } else {
    window.addEventListener('resize', updateProblemsCarousel);
  }
}

/* ===== BUBBLE ANIMATION ===== */
class OrganicBubbleAnimation {
  constructor() {
    this.canvas = document.getElementById('dotAnimation');
    if (!this.canvas) return;

    this.ctx = this.canvas.getContext('2d');
    this.dots = [];
    this.time = 0;
    this.COLOR = { r: 160, g: 120, b: 200 };

    this.setupCanvas();
    this.createOrganicBubble();
    this.bindEvents();
    setTimeout(() => this.animate(), 100);
  }

  setupCanvas() {
    this.canvas.width = window.innerWidth;
    this.canvas.height = window.innerHeight;
  }

  bindEvents() {
    window.addEventListener('resize', () => {
      this.setupCanvas();
      this.createOrganicBubble();
      // Services-Pattern beim Resize neu berechnen
      this.servicesPattern = undefined;
    });
  }

  createOrganicBubble() {
    const centerX = this.canvas.width / 2;
    const centerY = this.canvas.height / 2;
    const baseRadius = Math.min(this.canvas.width, this.canvas.height) * 0.55;

    this.dots = [];
    const numPoints = 2200; /* deutlich smoother & stabiler */

    for (let i = 0; i < numPoints; i++) {
      const phi = Math.acos(1 - 2 * i / numPoints);
      const theta = Math.PI * (1 + Math.sqrt(5)) * i;

      const distortion = 1 + Math.sin(phi*4)*0.20 + Math.cos(theta*3)*0.15;
      const organic = 0.7 + Math.random()*0.6;
      const radius = baseRadius * distortion * organic;

      const x = centerX + radius * Math.sin(phi) * Math.cos(theta);
      const y = centerY + radius * Math.sin(phi) * Math.sin(theta);

      const distanceFromCenter = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);
      if (distanceFromCenter < 160) continue;

      const maxDistance = baseRadius * 1.2;
      const size = 1 + (distanceFromCenter / maxDistance) * 2;
      const opacity = Math.min(0.9, Math.max(0, (distanceFromCenter - 120) / maxDistance) * 2);

      this.dots.push({
        x, y, targetX: x, targetY: y,
        phi, theta, baseRadius: radius,
        size, targetSize: size, opacity,
        targetOpacity: opacity
      });
    }
  }

  createServicesBoxPattern() {
    const boxPositions = [];
    const W = this.canvas.width, H = this.canvas.height;

    const boxWidth = Math.min(W * 0.7, 900);
    const boxHeight = Math.min(H * 0.45, 350);
    const boxX = (W - boxWidth) / 2;
    const boxY = (H - boxHeight) / 2;
    const cornerRadius = 20;

    const step = 3;

    for (let i = cornerRadius; i <= boxWidth - cornerRadius; i += step) {
      boxPositions.push({ x: boxX + i, y: boxY });
      boxPositions.push({ x: boxX + i, y: boxY + boxHeight });
    }
    for (let i = cornerRadius; i <= boxHeight - cornerRadius; i += step) {
      boxPositions.push({ x: boxX, y: boxY + i });
      boxPositions.push({ x: boxX + boxWidth, y: boxY + i });
    }
    for (let angle = 0; angle < Math.PI * 2; angle += 0.1) {
      const x = Math.cos(angle) * cornerRadius;
      const y = Math.sin(angle) * cornerRadius;
      boxPositions.push({ x: boxX + cornerRadius + x, y: boxY + cornerRadius + y });
      boxPositions.push({ x: boxX + boxWidth - cornerRadius + x, y: boxY + cornerRadius + y });
      boxPositions.push({ x: boxX + cornerRadius + x, y: boxY + boxHeight - cornerRadius + y });
      boxPositions.push({ x: boxX + boxWidth - cornerRadius + x, y: boxY + boxHeight - cornerRadius + y });
    }

    const dotsY = boxY + 25;
    const dotsStartX = boxX + 35;
    for (let i = 0; i < 3; i++) {
      const dotX = dotsStartX + i * 18;
      for (let angle = 0; angle < Math.PI * 2; angle += 0.6) {
        boxPositions.push({ x: dotX + Math.cos(angle) * 5, y: dotsY + Math.sin(angle) * 5 });
      }
    }

    const plusX = boxX + boxWidth - 35;
    const plusY = boxY + 25;
    const plusSize = 10;
    for (let i = -plusSize; i <= plusSize; i += 2) {
      boxPositions.push({ x: plusX + i, y: plusY });
      boxPositions.push({ x: plusX, y: plusY + i });
    }

    return boxPositions;
  }

  updateBubbleBreathing() {
    if (currentSlide !== idx.hero) return;

    const t = this.time * 0.0002;
    const centerX = this.canvas.width / 2;
    const centerY = this.canvas.height / 2;

    for (const dot of this.dots) {
      const sx = Math.sin(dot.phi) * Math.cos(dot.theta);
      const sy = Math.sin(dot.phi) * Math.sin(dot.theta);

      const main = Math.sin(sx*3 + sy*2 + t*2) * 0.25;
      const sec  = Math.sin(sy*4 - sx*1.5 + t*1.2) * 0.15;
      const pul  = Math.sin(t*0.8) * 0.12;

      const distortion = 1 + main + sec + pul;
      const radius = dot.baseRadius * distortion;

      dot.targetX = centerX + radius * Math.sin(dot.phi) * Math.cos(dot.theta);
      dot.targetY = centerY + radius * Math.sin(dot.phi) * Math.sin(dot.theta);

      const heroContainer = document.querySelector('.hero-text-container');
      if (heroContainer) {
        const rect = heroContainer.getBoundingClientRect();
        const hx = rect.left + rect.width / 2;
        const hy = rect.top + rect.height / 2;
        const hrx = Math.max(150, rect.width * 0.60);
        const hry = Math.max(100, rect.height * 0.60);

        const dx = dot.targetX - hx;
        const dy = dot.targetY - hy;
        const d  = Math.sqrt((dx*dx)/(hrx*hrx) + (dy*dy)/(hry*hry));

        if (d < 0.85) {
          dot.targetOpacity = 0;
        } else if (d < 1.10) {
          const p = (d-0.85)/(1.10-0.85);
          dot.targetOpacity = dot.opacity * 0.6 * Math.sin(p*Math.PI*0.5);
        } else {
          dot.targetOpacity = dot.opacity;
        }
      }
    }
  }

  animate = () => {
    this.time += 16;


    if (currentSlide === idx.hero) {
      this.updateBubbleBreathing();
    } else {
      // Alle anderen Seiten: Animation komplett ausblenden
      for (const dot of this.dots) {
        dot.targetOpacity = 0;
      }
    }

    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);

    // Nur animieren und zeichnen wenn auf Hero Seite
    if (currentSlide === idx.hero) {
      for (const dot of this.dots) {
        dot.x += (dot.targetX - dot.x) * 0.08;
        dot.y += (dot.targetY - dot.y) * 0.08;
        dot.size += (dot.targetSize - dot.size) * 0.12;
        dot.opacity += (dot.targetOpacity - dot.opacity) * 0.06;

        if (currentSlide === idx.hero) {
          const jitter = 0.15;
          dot.x += (Math.random() - 0.5) * jitter;
          dot.y += (Math.random() - 0.5) * jitter;
        }

        if (dot.opacity > 0.01) {
          this.ctx.fillStyle = `rgba(${this.COLOR.r}, ${this.COLOR.g}, ${this.COLOR.b}, ${dot.opacity})`;
          this.ctx.beginPath();
          this.ctx.arc(dot.x, dot.y, dot.size, 0, Math.PI * 2);
          this.ctx.fill();
        }
      }
    }

    requestAnimationFrame(this.animate);
  }
}

let bubbleAnimation;

/* ===== LOADING ANIMATION ===== */
function startLoadingAnimation() {
  const progressNumber = document.getElementById('progressNumber');
  const progressFill = document.getElementById('progressFill');
  
  let progress = 0;
  const interval = setInterval(() => {
    progress += Math.random() * 8 + 3;
    if (progress >= 100) {
      progress = 100;
      clearInterval(interval);
    }
    
    if (progressNumber) progressNumber.textContent = Math.floor(progress);
    if (progressFill) progressFill.style.width = progress + '%';
  }, 80);
}

function completeLoading() {
  const loadingScreen = document.getElementById('loadingScreen');
  const slidesContainer = document.getElementById('slides');
  
  if (loadingScreen) {
    loadingScreen.classList.add('fade-out');
    setTimeout(() => {
      loadingScreen.style.display = 'none';
    }, 800);
  }
  
  if (slidesContainer) {
    setTimeout(() => {
      slidesContainer.classList.add('loaded');
    }, 400);
  }
}

/* ===== LOAD LOGO ===== */
async function loadHeaderLogo() {
  try {
    const response = await fetch('./ep_logo.json');
    const logoData = await response.json();
    
    if (logoData.data_uri) {
      const logoContainer = document.getElementById('headerLogoContainer');
      if (logoContainer) {
        const logoImg = document.createElement('img');
        logoImg.src = logoData.data_uri;
        logoImg.alt = 'Effiprocess Logo';
        logoImg.className = 'header-logo-image';
        logoImg.width = 56;
        logoImg.height = 56;
        logoImg.style.width = '56px';
        logoImg.style.height = '56px';
        logoContainer.appendChild(logoImg);
      }
    }
  } catch (error) {
    console.log('Logo could not be loaded:', error);
  }
}

/* ===== LOAD AI ICON ===== */
async function loadAIIcon() {
  try {
    const response = await fetch('./icon.json');
    const iconData = await response.json();
    
    if (iconData.data_uri) {
      // Replace the small document icon with the AI business icon
      const iconContainer = document.getElementById('aiIconContainer');
      if (iconContainer) {
        // Clear existing SVG content
        iconContainer.innerHTML = '';
        
        // Create new image element
        const aiIconImg = document.createElement('img');
        aiIconImg.src = iconData.data_uri;
        aiIconImg.alt = iconData.alt || 'AI Business Icon';
        aiIconImg.style.cssText = `
          width: 280px;
          height: 430px;
          object-fit: contain;
          opacity: 0.6;
          filter: saturate(1.3) brightness(1.1);
        `;
        
        iconContainer.appendChild(aiIconImg);
      }
    }
  } catch (error) {
    console.log('AI Icon could not be loaded:', error);
  }
}

/* ===== INITIALIZATION ===== */
document.addEventListener('DOMContentLoaded', () => {
  // Start loading animation
  startLoadingAnimation();
  
  // Complete loading after 3 seconds
  setTimeout(() => {
    completeLoading();
  }, 3000);

  refreshSlides();

  // Initial state - ONLY use CSS classes for perfect transitions
  slides.forEach((el,i) => {
    const isFirst = i === 0;
    
    // Clean slate - remove any inline styles that override CSS
    el.style.display = '';
    el.style.visibility = '';
    el.style.opacity = '';
    el.style.transform = '';
    el.style.filter = '';
    el.style.pointerEvents = '';
    el.style.transition = '';
    
    // ONLY manage CSS classes and z-index
    if (isFirst) {
      el.classList.add('active');
      el.style.zIndex = '100';
    } else {
      el.classList.remove('active');
      el.style.zIndex = '1';
    }
  });

  // Carousel DOM holen (falls es existiert)
  track = document.getElementById('servicesTrack');
  problemsTrack = document.getElementById('problemsTrack');

  bindVerticalArrows();
  if (track)          bindCarouselControls();
  if (problemsTrack)  bindProblemsControls();

  goToSlide(0);
  updateCarouselArrows();
  updateProblemsArrows();

  bubbleAnimation = new OrganicBubbleAnimation();
  
  // Load the header logo
  loadHeaderLogo();
  
  // Load the AI icon for slide 3
  loadAIIcon();
});

// Utility function for header click
function goToHome() {
  goToSlide(0);
}

// Calculator function for time savings
function calculateSavings() {
  const tasksPerDay = parseInt(document.getElementById('tasksPerDay').value) || 0;
  const minutesPerTask = parseInt(document.getElementById('minutesPerTask').value) || 0;
  const workDays = parseInt(document.getElementById('workDays').value) || 5;
  const automationPercent = parseInt(document.getElementById('automationPercent').value) || 0;
  const employees = parseInt(document.getElementById('employees').value) || 1;
  
  // Calculate daily time savings per employee (in hours)
  const dailyTimeSavingsPerEmployee = (tasksPerDay * minutesPerTask * automationPercent / 100) / 60;
  
  // Calculate annual hours saved (52 weeks per year)
  const annualHoursSaved = dailyTimeSavingsPerEmployee * workDays * 52 * employees;
  
  // Calculate cost savings (75,000€ per year = ~36€ per hour for 2080 work hours)
  const hourlyRate = 75000 / 2080; // ~36€ per hour
  const annualCostSavings = annualHoursSaved * hourlyRate;
  
  // Update display
  document.getElementById('hoursSaved').textContent = 
    Math.round(annualHoursSaved).toLocaleString() + ' hours';
  document.getElementById('costSaved').textContent = 
    '€' + Math.round(annualCostSavings).toLocaleString();
}

// Calculate on page load with default values
document.addEventListener('DOMContentLoaded', () => {
  setTimeout(() => {
    if (document.getElementById('tasksPerDay')) {
      calculateSavings();
    }
  }, 100);
});

=== STYLES.CSS ===

/* Basis */
* { box-sizing: border-box; margin: 0; padding: 0; }
:root {
  --text: #808080;         /* Grau für Überschriften/Text */
  --bg:   #ffffff;
  --dot-r: 160; --dot-g: 120; --dot-b: 200; /* dein Lila (für Punkt-Schrift) */
  --header-h: 56px;          /* Höhe deiner festen Kopfzeile */
  --page-pad: 24px;          /* Innenabstand zu den Rändern */
  --gap-title-block: 20px;   /* Abstand zwischen Titel und Block */
}
html, body { height: 100%; background: var(--bg); color: #000; }
body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Inter, Arial, sans-serif;
  overflow: hidden;                  /* <<< WICHTIG: natives Scrollen deaktivieren */
}

/* ===== LOADING SCREEN ===== */
.loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 50%, #f0f0f0 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  transition: opacity 0.8s ease, transform 0.8s ease;
}

.loading-screen.fade-out {
  opacity: 0;
  transform: scale(1.05);
  pointer-events: none;
}

.loading-content {
  text-align: center;
  max-width: 500px;
  padding: 40px;
}

.loading-logo {
  margin-bottom: 80px;
}

.loading-title {
  font-size: clamp(2.5rem, 6vw, 4rem);
  font-weight: 900;
  color: #333;
  letter-spacing: -0.02em;
  margin: 0 0 10px 0;
  text-transform: uppercase;
}

.loading-subtitle {
  font-size: 0.9rem;
  color: #666;
  letter-spacing: 0.15em;
  margin: 0;
  text-transform: uppercase;
  font-weight: 400;
}

.loading-progress {
  position: relative;
  margin-top: 40px;
}

.progress-number {
  font-size: 1.5rem;
  font-weight: 300;
  color: #999;
  margin-top: 15px;
  margin-bottom: 0px;
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
}

.progress-label {
  font-size: 0.8rem;
  color: #999;
  letter-spacing: 0.2em;
  margin-bottom: 20px;
  text-transform: uppercase;
  font-weight: 500;
}

.progress-bar {
  width: 100%;
  height: 2px;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 1px;
  overflow: hidden;
  position: relative;
  margin-bottom: 40px;
}

.progress-fill {
  width: 0%;
  height: 100%;
  background: linear-gradient(90deg, #a078c8, #b088d8);
  border-radius: 1px;
  transition: width 0.3s ease;
  box-shadow: 0 0 10px rgba(160, 120, 200, 0.3);
}

.quality-text {
  font-size: 0.75rem;
  color: #aaa;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  font-weight: 400;
  margin-top: 30px;
}

/* Canvas im Hintergrund */
.dot-canvas {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 0; /* HINTER die Slides! */
  background: transparent; /* explizit transparent */
}

/* Fixed Header */
.header {
  background-color: #FFFFFF;
  border-bottom: 1px solid #CCCCCC;
  padding: 15px 20px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 2;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.header-logo {
  font-size: 1.4rem;
  font-weight: 700;
  color: var(--text);
  letter-spacing: -0.5px;
  margin: 0;
  text-align: left;
  cursor: pointer;
  transition: color 0.3s ease;
}

.header-logo:hover {
  color: #a078c8;
}

/* Header Logo Container */
.header-logo-container {
  height: 56px;
  width: 56px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.header-logo-container:hover {
  transform: scale(1.1);
}

.header-logo-image {
  width: 56px !important;
  height: 56px !important;
  max-height: 56px !important;
  max-width: 56px !important;
  object-fit: contain;
  filter: opacity(0.9);
  transition: filter 0.3s ease;
  border-radius: 6px;
}

.header-logo-image:hover {
  filter: opacity(1);
  transform: scale(1.05);
}

/* Vollbild-Slides */
#slides {
  position: relative; 
  z-index: 1; /* Über Canvas */
  width: 100vw; 
  height: 100vh;
  padding-top: 56px; /* Space for header */
  opacity: 0; /* Initially hidden until loading complete */
  transition: opacity 0.5s ease;
}

#slides.loaded {
  opacity: 1;
}

.slide {
  position: absolute; 
  inset: 0;
  top: 0; /* Kein extra top - padding-top im #slides reicht */
  right: 80px; /* Platz für Pfeile lassen */
  display: grid; 
  place-items: center;
}

/* Hero Section */
.hero {
  display: flex;
  align-items: center;
  justify-content: center;
  right: 0; /* No right margin for hero */
}

.hero-text-container {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 20px;
}

.hero-main-text {
  font-size: 1.5rem;
  font-weight: 400;
  color: #808080;
  line-height: 1.4;
  letter-spacing: -0.01em;
  max-width: 750px;
  text-align: center;
  position: relative;
  z-index: 5;
}


/* ===== SERVICES SECTION ===== */
.services {
  background: #ffffff;
  position: relative;
  height: 100vh;
  display: block !important;
  z-index: 10; /* Above canvas and other elements */
}

.services-container {
  position: relative;
  width: 100%;
  height: 100%;
  padding: 40px;
}

.services-page {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 20px 60px 40px;
  transition: all 1200ms cubic-bezier(0.25, 0.1, 0.25, 1);
  transform: translateY(0);
}

.services-content-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 80px;
  max-width: 1200px;
  margin: 0 auto;
  height: 100%;
  align-items: flex-start;
  padding-top: 60px;
}

/* Text Section */
.services-text-section {
  padding: 40px 0;
}

.services-category {
  font-size: 0.85rem;
  color: #666;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-weight: 500;
  margin-bottom: 20px;
}

.services-headline {
  font-size: clamp(2rem, 4vw, 2.8rem);
  font-weight: 600;
  color: #333;
  line-height: 1.2;
  margin-bottom: 30px;
  letter-spacing: -0.02em;
}

.services-description {
  font-size: 1.1rem;
  color: #666;
  line-height: 1.6;
  margin-bottom: 40px;
  max-width: 480px;
}

/* Enhanced Features Grid */
.services-features-grid {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 40px;
}

.feature-card {
  display: flex;
  align-items: flex-start;
  gap: 15px;
  padding: 20px;
  background: rgba(255, 255, 255, 0.6);
  border: 1px solid rgba(160, 120, 200, 0.15);
  border-radius: 12px;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.feature-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(160, 120, 200, 0.12);
  border-color: rgba(160, 120, 200, 0.3);
}

.feature-icon {
  width: 40px;
  text-align: center;
  flex-shrink: 0;
}

.icon-circle {
  width: 32px;
  height: 32px;
  background: linear-gradient(135deg, #a078c8, #b088d8);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  font-size: 0.9rem;
  margin: 0 auto;
}

.feature-content {
  flex: 1;
}

.feature-title {
  font-size: 1rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 5px;
  line-height: 1.3;
}

.feature-desc {
  font-size: 0.85rem;
  color: #666;
  line-height: 1.4;
}

/* Technology Stack */
.tech-stack {
  margin-top: 30px;
  padding-top: 25px;
  border-top: 1px solid rgba(160, 120, 200, 0.2);
}

.tech-label {
  font-size: 0.85rem;
  color: #666;
  font-weight: 500;
  margin-bottom: 15px;
}

.tech-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.tech-tag {
  font-size: 0.75rem;
  color: #a078c8;
  background: rgba(160, 120, 200, 0.1);
  padding: 4px 12px;
  border-radius: 15px;
  border: 1px solid rgba(160, 120, 200, 0.2);
  font-weight: 500;
}

/* Visual Section */
.services-visual-section {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 500px;
}

.geometric-shape {
  position: absolute;
  z-index: 1;
}

.shape-1 {
  width: 120px;
  height: 120px;
  background: linear-gradient(45deg, rgba(160, 120, 200, 0.1), rgba(200, 160, 216, 0.2));
  border-radius: 50% 20% 50% 20%;
  top: 50px;
  left: 50px;
  transform: rotate(-15deg);
}

.shape-2 {
  width: 80px;
  height: 200px;
  background: linear-gradient(135deg, rgba(160, 120, 200, 0.08), rgba(200, 160, 216, 0.15));
  border-radius: 40px;
  bottom: 80px;
  right: 30px;
  transform: rotate(25deg);
}

.shape-3 {
  width: 60px;
  height: 60px;
  background: linear-gradient(45deg, rgba(160, 120, 200, 0.1), rgba(200, 160, 216, 0.18));
  border-radius: 50%;
  top: 200px;
  left: 100px;
  transform: rotate(-10deg);
}

.shape-4 {
  width: 120px;
  height: 4px;
  background: linear-gradient(90deg, rgba(160, 120, 200, 0.3), transparent);
  border-radius: 2px;
  top: 150px;
  right: 120px;
  transform: rotate(15deg);
}

.browser-illustration {
  position: relative;
  z-index: 15;
  filter: drop-shadow(0 20px 40px rgba(160, 120, 200, 0.2));
  opacity: 1;
  transition: opacity 0.3s ease;
}

.browser-svg {
  width: 350px;
  height: 245px;
}

.page-number {
  position: absolute;
  bottom: 20px;
  right: 20px;
  font-size: 1.2rem;
  color: #ccc;
  font-weight: 300;
  font-family: 'SF Mono', Monaco, monospace;
  z-index: 3;
}

/* Navigation */
.nav-vertical {
  position: fixed;
  right: 24px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: 16px;
  z-index: 2;
}

.nav-vertical .arrow {
  width: 40px;
  height: 40px;
  border: 1px solid #ddd;
  background: white;
  border-radius: 50%;
  font-size: 12px;
  color: #666;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.nav-vertical .arrow:hover {
  background: #a078c8;
  color: white;
  border-color: #a078c8;
}

/* Smooth slide transitions */
.slide {
  display: flex;
  opacity: 0;
  transform: translateY(40px) scale(0.98);
  transition: all 1.2s cubic-bezier(0.25, 0.1, 0.25, 1);
  pointer-events: none;
  filter: blur(1px);
}

.slide.active {
  opacity: 1;
  transform: translateY(0) scale(1);
  pointer-events: auto;
  filter: blur(0px);
}

/* Interface Expertise Page (Construction Style with Interface Theme) */
.interface-expertise-page {
  background: #ffffff;
  position: relative;
  height: 100vh;
  display: block !important;
  overflow: hidden;
  z-index: 15; /* Above everything including canvas */
}

.interface-expertise-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0;
}

/* Large page number on the left */
.interface-expertise-number-section {
  position: relative;
  width: 180px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  z-index: 10;
}

/* Main content area */
.interface-expertise-content-area {
  flex: 1;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 60px 0 40px;
  background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.9) 100%);
  z-index: 5;
}

/* Interface-themed background visual */
.interface-expertise-visual-bg {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background: 
    linear-gradient(to left, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.85) 100%),
    linear-gradient(135deg, #f8f9fa 0%, #f0f0f0 25%, #e8e8e8 50%, #f0f0f0 75%, #f8f9fa 100%);
  z-index: 1;
}

.interface-expertise-visual-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    /* Tech grid pattern */
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 40px,
      rgba(160, 120, 200, 0.02) 40px,
      rgba(160, 120, 200, 0.02) 42px
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 40px,
      rgba(160, 120, 200, 0.02) 40px,
      rgba(160, 120, 200, 0.02) 42px
    ),
    /* Interface elements suggestion */
    radial-gradient(circle at 80% 20%, rgba(160, 120, 200, 0.03) 0%, transparent 40%),
    radial-gradient(circle at 20% 80%, rgba(160, 120, 200, 0.02) 0%, transparent 40%);
}

.interface-expertise-visual-bg::after {
  content: '';
  position: absolute;
  top: 30%;
  right: 15%;
  width: 120px;
  height: 80px;
  border: 2px solid rgba(160, 120, 200, 0.08);
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.05);
}

/* Text section styling */
.interface-expertise-text-section {
  position: relative;
  z-index: 10;
  max-width: 500px;
}

.interface-expertise-category {
  font-size: 0.9rem;
  color: #9a9a9a;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-weight: 500;
  margin-bottom: 30px;
}

.interface-expertise-headline {
  font-size: clamp(2.2rem, 4vw, 3.2rem);
  font-weight: 300;
  color: #333333;
  line-height: 1.15;
  margin-bottom: 40px;
  letter-spacing: -0.02em;
}

.interface-expertise-accent {
  color: #a078c8; /* Purple accent for interface theme */
  font-weight: 400;
}

.interface-expertise-description {
  font-size: 1rem;
  color: #666666;
  line-height: 1.65;
  margin-bottom: 50px;
  max-width: 460px;
}

.interface-expertise-cta {
  margin-top: 20px;
}

.interface-expertise-cta-text {
  font-size: 0.8rem;
  color: #9a9a9a;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  font-weight: 500;
  cursor: pointer;
  position: relative;
}

.interface-expertise-cta-text::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 40px;
  height: 2px;
  background: #a078c8; /* Purple underline */
  transition: width 0.3s ease;
}

.interface-expertise-cta-text:hover::after {
  width: 100%;
}

/* Responsive Design */
@media (max-width: 768px) {
  .interface-expertise-container {
    flex-direction: column;
  }
  
  .interface-expertise-number-section {
    width: 100%;
    height: 80px;
    align-items: flex-start;
    justify-content: flex-start;
    padding: 20px;
  }
  
  .large-page-number {
    font-size: 3rem;
    transform: none;
  }
  
  .interface-expertise-content-area {
    padding: 20px;
  }
  
  .interface-expertise-visual-bg {
    width: 100%;
    height: 30%;
    bottom: 0;
    right: 0;
  }
}

/* Interface Simple Page */
.interface-simple-page {
  background: #ffffff;
  position: relative;
  height: 100vh;
  display: flex !important;
  align-items: center;
  justify-content: center;
  z-index: 10;
}

.interface-simple-container {
  text-align: center;
}

.interface-simple-title {
  font-size: 4rem;
  font-weight: 800;
  color: #a078c8;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

.interface-innovation-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0;
}

/* Large page number on the left */
.interface-innovation-number-section {
  position: relative;
  width: 180px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  z-index: 10;
}

/* Main content area */
.interface-innovation-content-area {
  flex: 1;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 60px 0 40px;
  background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.9) 100%);
  z-index: 5;
}

/* Interface office space background visual */
.interface-innovation-visual-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background: 
    linear-gradient(to right, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.85) 100%),
    linear-gradient(135deg, #f8f9fa 0%, #f0f0f0 25%, #e8e8e8 50%, #f0f0f0 75%, #f8f9fa 100%);
  z-index: 1;
}

.interface-innovation-visual-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    /* Office/workspace grid pattern */
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 30px,
      rgba(160, 120, 200, 0.03) 30px,
      rgba(160, 120, 200, 0.03) 32px
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 30px,
      rgba(160, 120, 200, 0.03) 30px,
      rgba(160, 120, 200, 0.03) 32px
    ),
    /* Interface workspace elements */
    radial-gradient(circle at 20% 25%, rgba(160, 120, 200, 0.04) 0%, transparent 50%),
    radial-gradient(circle at 80% 75%, rgba(160, 120, 200, 0.03) 0%, transparent 50%);
}

.interface-innovation-visual-bg::after {
  content: '';
  position: absolute;
  top: 20%;
  left: 15%;
  width: 150px;
  height: 100px;
  border: 2px solid rgba(160, 120, 200, 0.06);
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.03);
  box-shadow: 0 0 20px rgba(160, 120, 200, 0.05);
}

/* Text section styling */
.interface-innovation-text-section {
  position: relative;
  z-index: 10;
  max-width: 500px;
}

.interface-innovation-category {
  font-size: 0.9rem;
  color: #9a9a9a;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-weight: 500;
  margin-bottom: 30px;
}

.interface-innovation-headline {
  font-size: clamp(2.2rem, 4vw, 3.2rem);
  font-weight: 300;
  color: #333333;
  line-height: 1.15;
  margin-bottom: 40px;
  letter-spacing: -0.02em;
}

.interface-innovation-accent {
  color: #a078c8; /* Purple accent for interface theme */
  font-weight: 400;
}

.interface-innovation-description {
  font-size: 1rem;
  color: #666666;
  line-height: 1.65;
  margin-bottom: 50px;
  max-width: 460px;
}

.interface-innovation-cta {
  margin-top: 20px;
}

.interface-innovation-cta-text {
  font-size: 0.8rem;
  color: #9a9a9a;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  font-weight: 500;
  cursor: pointer;
  position: relative;
}

.interface-innovation-cta-text::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 40px;
  height: 2px;
  background: #a078c8; /* Purple underline */
  transition: width 0.3s ease;
}

.interface-innovation-cta-text:hover::after {
  width: 100%;
}

/* Responsive Design */
@media (max-width: 768px) {
  .interface-innovation-container {
    flex-direction: column;
  }
  
  .interface-innovation-number-section {
    width: 100%;
    height: 80px;
    align-items: flex-start;
    justify-content: flex-start;
    padding: 20px;
  }
  
  .large-page-number {
    font-size: 3rem;
    transform: none;
  }
  
  .interface-innovation-content-area {
    padding: 20px;
  }
  
  .interface-innovation-visual-bg {
    width: 100%;
    height: 30%;
    bottom: 0;
    left: 0;
  }
}

/* Vision Pages (Construction Style) */
.vision-page {
  background: #ffffff;
  position: relative;
  height: 100vh;
  display: block !important;
  overflow: hidden;
}

.vision-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0;
}

/* Large page number on the left */
.vision-number-section {
  position: relative;
  width: 180px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  z-index: 10;
}

.large-page-number {
  font-size: 5rem;
  font-weight: 300;
  color: #9a9a9a;
  letter-spacing: -0.02em;
  transform: rotate(-90deg);
  white-space: nowrap;
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
}

/* Main content area */
.vision-content-area {
  flex: 1;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 60px 0 40px;
  background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.9) 100%);
  z-index: 5;
}

/* Background visual */
.vision-visual-bg {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background: 
    linear-gradient(to left, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.8) 100%),
    linear-gradient(135deg, #f8f8f8 0%, #e0e0e0 25%, #d5d5d5 50%, #c8c8c8 75%, #b8b8b8 100%);
  z-index: 1;
}

.vision-visual-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    repeating-linear-gradient(
      45deg,
      transparent,
      transparent 20px,
      rgba(160, 120, 200, 0.05) 20px,
      rgba(160, 120, 200, 0.05) 40px
    );
}

/* Text section styling */
.vision-text-section {
  position: relative;
  z-index: 10;
  max-width: 500px;
}

.vision-category {
  font-size: 0.9rem;
  color: #9a9a9a;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-weight: 500;
  margin-bottom: 30px;
}

.vision-headline {
  font-size: clamp(2.2rem, 4vw, 3.2rem);
  font-weight: 300;
  color: #333333;
  line-height: 1.15;
  margin-bottom: 40px;
  letter-spacing: -0.02em;
}

.vision-accent {
  color: #e53e3e;
  font-weight: 400;
}

.vision-description {
  font-size: 1rem;
  color: #666666;
  line-height: 1.65;
  margin-bottom: 50px;
  max-width: 460px;
}

.vision-cta {
  margin-top: 20px;
}

.vision-cta-text {
  font-size: 0.8rem;
  color: #9a9a9a;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  font-weight: 500;
  cursor: pointer;
  position: relative;
}

.vision-cta-text::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 40px;
  height: 2px;
  background: #e53e3e;
  transition: width 0.3s ease;
}

.vision-cta-text:hover::after {
  width: 100%;
}

/* Modern Website Design Page */
.modern-design-page {
  background: #ffffff;
  position: relative;
  height: 100vh;
  display: block !important;
  overflow: hidden;
}

.modern-design-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0;
}

/* Large page number on the left */
.modern-design-number-section {
  position: relative;
  width: 180px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  z-index: 10;
}

/* Main content area */
.modern-design-content-area {
  flex: 1;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 60px 0 40px;
  background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.9) 100%);
  z-index: 5;
}

/* Background visual with large browser icon */
.modern-design-visual-bg {
  position: absolute;
  top: 0;
  right: 0;
  width: 60%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
  background: 
    linear-gradient(to left, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.7) 100%);
}

.browser-icon-large {
  position: relative;
  opacity: 0.8;
  filter: drop-shadow(0 20px 60px rgba(160, 120, 200, 0.2));
  animation: browserFloat 8s ease-in-out infinite;
}

@keyframes browserFloat {
  0%, 100% { transform: translateY(0) scale(1); }
  33% { transform: translateY(-10px) scale(1.02); }
  66% { transform: translateY(5px) scale(0.98); }
}

.browser-icon-svg {
  width: 350px;
  height: 260px;
}

/* Text section styling */
.modern-design-text-section {
  position: relative;
  z-index: 10;
  max-width: 500px;
}

.modern-design-category {
  font-size: 0.9rem;
  color: #9a9a9a;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-weight: 500;
  margin-bottom: 30px;
}

.modern-design-headline {
  font-size: clamp(2.2rem, 4vw, 3.2rem);
  font-weight: 300;
  color: #333333;
  line-height: 1.15;
  margin-bottom: 40px;
  letter-spacing: -0.02em;
}

.modern-design-accent {
  color: #a078c8; /* Purple accent instead of red */
  font-weight: 400;
}

.modern-design-description {
  font-size: 1rem;
  color: #666666;
  line-height: 1.65;
  margin-bottom: 50px;
  max-width: 460px;
}

.modern-design-cta {
  margin-top: 20px;
}

.modern-design-cta-text {
  font-size: 0.8rem;
  color: #9a9a9a;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  font-weight: 500;
  cursor: pointer;
  position: relative;
}

.modern-design-cta-text::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 40px;
  height: 2px;
  background: #a078c8; /* Purple underline */
  transition: width 0.3s ease;
}

.modern-design-cta-text:hover::after {
  width: 100%;
}

/* Special styling for the large browser icon */
.browser-icon-large .browser-icon-svg rect,
.browser-icon-large .browser-icon-svg circle {
  animation: browserElementPulse 4s ease-in-out infinite;
}

@keyframes browserElementPulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .modern-design-container {
    flex-direction: column;
  }
  
  .modern-design-number-section {
    width: 100%;
    height: 80px;
    align-items: flex-start;
    justify-content: flex-start;
    padding: 20px;
  }
  
  .modern-design-content-area {
    padding: 20px;
  }
  
  .modern-design-visual-bg {
    width: 100%;
    height: 40%;
    bottom: 0;
    right: 0;
  }
}